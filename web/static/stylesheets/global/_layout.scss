// - - - - - - - - - - - - - - - - - - -
// - - layout
// global layout classes - height, width, padding, margin, etc.

@mixin break($size) {
  @media (min-width: map-get($breakpoints, $size)) {
    @content;
  };
};

.el {
  display: none;

  @include break(sm) {
    display: block;
  };
};

.grid {
  display: flex;
  flex-flow: row wrap;
}

.bg_first {
  background-color: $first_bg
}

.bg_second {
  background-color: $second_bg
}

// Create all the grid elements
@each $key, $value in $breakpoints {
  @for $i from 1 through $grid_size {
    .grid__item--#{$key}-span-#{$i} {
      flex: 0 0 100%;
      @include break($key) {
        flex: 0 0 #{($i / $grid_size * 100) + "%"};
      }
    }
  }
}

* {
  box-sizing: border-box;
}

// Background areas
.top-bg {
  background-color: $primary_bg;
  padding: 30px 0 40px 0px;
  padding: 2vw 0 3vw 0;
  height: 300px;
  width: 100vw;
  position: fixed;
  z-index: -100;
}

.top-bg-container {
  position: relative;
  height: 17vw;
  width: 100vw;
}

// TODO remove .submenu-start
.main, .submenu-start, .menu {
  position: relative;
}

.main {
  background-color: $alternate_bg;
}

// TODO remove .submenu-start
.submenu-start {
  background-color: transparent;
  z-index: 100;
  padding: 8px;
  height: 40px;
}

// TODO remove .submenu-stick
.submenu-stick {
  position: fixed;
  width: 100%;
  top: 0;
  margin-bottom: -40px;
  background-color: $primary_bg;
}

.main-stick {
  margin-top: 40px;
}

.container {
  max-width: 75%;
  margin: auto;
}

$menu_height: 40px;

.menu {
  position: absolute;
  background-color: transparent;
  z-index: 1;
  padding: 8px;
  height: $menu_height;
}

.menu-container {
  position: relative;
  z-index: -1;
  padding: 8px;
  height: $menu_height
}

.menu-stick {
  position: fixed;
  width: 100%;
  top: 0;
  margin-bottom: -40px;
  background-color: $primary_bg;
  z-index: 100;
}
